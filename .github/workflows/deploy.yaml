name: Deploy to Kubernetes
on:
  push:
    branches: [main]
    paths:
      - 'kubernetes/**'

jobs:
  argocd-sync:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Configure AWS
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Get Kubeconfig
        run: |
          # SSM'den kubeconfig'i al ve decode et
          aws ssm get-parameter --name "/k3s/kubeconfig" --query Parameter.Value --output text | base64 --decode > kubeconfig.yaml

      - name: Wait for Argo CD
        run: |
          # Argo CD'nin hazır olmasını bekle
          kubectl wait --for=condition=available deployment/argocd-server -n argocd --timeout=300s --kubeconfig=kubeconfig.yaml

      - name: Deploy Argo CD App
        run: |
          # Argo CD Application manifestini apply et
          kubectl apply -f kubernetes/argocd-app.yaml --kubeconfig=kubeconfig.yaml

      - name: Sync Argo CD Application
        run: |
          # Argo CD API ile sync tetikle
          ARGOCD_SERVER="argocd-server.argocd.svc.cluster.local"
          ARGOCD_TOKEN="${{ secrets.ARGOCD_TOKEN }}"
          
          # Sync isteği gönder
          curl -sS -k -X POST \
            -H "Authorization: Bearer $ARGOCD_TOKEN" \
            -H "Content-Type: application/json" \
            "https://$ARGOCD_SERVER/api/v1/applications/weather-app/sync"